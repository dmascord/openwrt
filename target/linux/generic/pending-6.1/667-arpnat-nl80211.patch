--- linux-6.1-orig/net/wireless/util.c.orig	2023-09-28 16:26:17.428940730 +1000
+++ linux-6.1/net/wireless/util.c	2023-09-28 16:33:27.481614226 +1000
@@ -1119,7 +1119,6 @@
 		/* if it's part of a bridge, reject changing type to station/ibss */
 		if (netif_is_bridge_port(dev) &&
 		    (ntype == NL80211_IFTYPE_ADHOC ||
-		     ntype == NL80211_IFTYPE_STATION ||
 		     ntype == NL80211_IFTYPE_P2P_CLIENT))
 			return -EBUSY;
 			
@@ -1081,15 +1080,12 @@
 	if (!err) {
 		dev->priv_flags &= ~IFF_DONT_BRIDGE;
 		switch (ntype) {
-		case NL80211_IFTYPE_STATION:
-			if (dev->ieee80211_ptr->use_4addr)
-				break;
-			fallthrough;
 		case NL80211_IFTYPE_OCB:
 		case NL80211_IFTYPE_P2P_CLIENT:
 		case NL80211_IFTYPE_ADHOC:
 			dev->priv_flags |= IFF_DONT_BRIDGE;
 			break;
+		case NL80211_IFTYPE_STATION:
 		case NL80211_IFTYPE_P2P_GO:
 		case NL80211_IFTYPE_AP:
 		case NL80211_IFTYPE_AP_VLAN:
 
@@ -1136,7 +1135,6 @@
 		case NL80211_IFTYPE_ADHOC:
 			cfg80211_leave_ibss(rdev, dev, false);
 			break;
-		case NL80211_IFTYPE_STATION:
 		case NL80211_IFTYPE_P2P_CLIENT:
 			wdev_lock(dev->ieee80211_ptr);
 			cfg80211_disconnect(rdev, dev,
@@ -1144,6 +1142,7 @@
 			wdev_unlock(dev->ieee80211_ptr);
 			break;
 		case NL80211_IFTYPE_MESH_POINT:
+		case NL80211_IFTYPE_STATION:
 			/* mesh should be handled? */
 			break;
 		case NL80211_IFTYPE_OCB:
 		
--- linux-6.1-orig/net/wireless/core.c.orig	2023-09-19 20:23:04.000000000 +1000
+++ linux-6.1/net/wireless/core.c	2023-09-28 16:26:17.428940730 +1000
@@ -1298,8 +1298,7 @@
 	/* allow mac80211 to determine the timeout */
 	wdev->ps_timeout = -1;
 
-	if ((wdev->iftype == NL80211_IFTYPE_STATION ||
-	     wdev->iftype == NL80211_IFTYPE_P2P_CLIENT ||
+	if ((wdev->iftype == NL80211_IFTYPE_P2P_CLIENT ||
 	     wdev->iftype == NL80211_IFTYPE_ADHOC) && !wdev->use_4addr)
 		wdev->netdev->priv_flags |= IFF_DONT_BRIDGE;
 
--- linux-6.1-orig/net/wireless/nl80211.c.orig	2023-09-28 16:26:17.436940666 +1000
+++ linux-6.1/net/wireless/nl80211.c	2023-09-28 16:34:30.105141916 +1000
@@ -4136,8 +4136,6 @@
 			       enum nl80211_iftype iftype)
 {
 	if (!use_4addr) {
-		if (netdev && netif_is_bridge_port(netdev))
-			return -EBUSY;
 		return 0;
 	}
 	
--- linux-6.1-orig/net/wireless/util.c	2023-10-01 22:06:10.333094650 +1100
+++ linux-6.1/net/wireless/util.c	2023-10-01 22:12:57.669642534 +1100
@@ -2264,9 +2264,7 @@
 
 	switch (check_swif) {
 	case 0:
-		if (is_vlan && is_4addr)
-			return wiphy->flags & WIPHY_FLAG_4ADDR_AP;
-		return wiphy->interface_modes & BIT(iftype);
+		return true;
 	case 1:
 		if (!(wiphy->software_iftypes & BIT(iftype)) && is_vlan)
 			return wiphy->flags & WIPHY_FLAG_4ADDR_AP;


